#!/bin/bash
#
#  setup_cmake Chooses the correct cmake build command for a machine.
#
#-------------------------------------------------------------------------------

BUILD_TYPE=Release

MACHINE_ID=`uname -n`

echo Building KORC for machine $MACHINE_ID
echo

if [ $# -eq 1 ]
then
    BUILD_TYPE=Debug
fi

echo cmake configured to generate a $BUILD_TYPE build.
if [ "$BUILD_TYPE" == Debug ]
then
    echo "    cmake may be reconfigured to generate a Release build by running this     "
    echo "    script with no arguments or using the commmand                            "
    echo
    echo "    cmake -DCMAKE_BUILD_TYPE=Release                                          "
else
    echo "    cmake may be reconfigured to generate a Debug build by running this script"
    echo "    with a Debug argument or using the commmand                               "
    echo
    echo "    cmake -DCMAKE_BUILD_TYPE=Debug                                            "
fi

# CMake doesn't like being reconfigured completely. To avoid problems this
# script will delete the CMakeCache.txt file allowing this script to start
# from a clean slate. Use the -f option on rm to silence any errors from
# rm. This makes will cause rm to ignore the error to occur if
# CMakeCache.txt doesn't exist.

rm -f CMakeCache.txt
rm -rf CMakeFiles


echo
if [ $MACHINE_ID == "MBP115573"     ]
then
    #  Config for Matt Beidler's ORNL machine.

    export CC=/opt/local/bin/gcc-mp-11
    export CXX=/opt/local/bin/g++-mp-11
    export FC=/opt/local/bin/gfortran-mp-11

    cmake -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE                             \
          -DCMAKE_Fortran_FLAGS="-O3 -fopenmp" \
	       -DCMAKE_Fortran_FLAGS_DEBUG="-g -ffpe-trap=invalid,zero,overflow -fimplicit-none -fbacktrace  -fsanitize=address"   \


 elif [ $LMOD_SYSHOST == "perlmutter"   ]
 then

     #  Config for NERSC Perlmutter.
     module load cmake
     module unload darshan/3.1.4
     module load nvidia

     # USING GNU
     cmake -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE                                          \
           -DCMAKE_Fortran_FLAGS="-fast -mp=gpu -gpu=cc80 -Mfree"  \
           -DCMAKE_Fortran_FLAGS_DEBUG="-Minfo=all" \

else
# MACHINE_ID is new and unknown. Inform the user how to add support for this new machine.
    echo $MACHINE_ID not suported by this script.
    echo To support this machine, add a new elif statement of the form
    echo
    echo elif [ \$MACHINE_ID == \"$MACHINE_ID\" ]
    echo then
    echo "   " cmake -DVARIABLE=value ...
    echo
fi
